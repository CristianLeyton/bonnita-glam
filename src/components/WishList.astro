---
import DeleteIcon from "./resources/icons/DeleteIcon.astro";
import StoreIcon from "./resources/icons/StoreIcon.astro";
---

<header
  class="flex items-center w-full justify-between border-b border-neutral-200 pb-2"
>
  <h3 class="font-bold">Editar lista</h3>

  <div class="flex flex-nowrap gap-2 justify-end">
    <button
      id="cleanList"
      title="Eliminar todo"
      class="bg-rose-200 text-primary inline-flex items-center font-semibold text-sm gap-1.5 px-2 py-1.5 rounded flex-nowrap text-nowrap transition hover:-translate-y-0.5 cursor-pointer"
      >Vaciar lista <DeleteIcon className="inline-block" /></button
    >
    <a
      href="/productos"
      title="Ver más productos"
      class="bg-primary text-secondary inline-flex flex-nowrap items-center text-nowrap font-semibold text-sm gap-1.5 px-2 py-1.5 rounded transition hover:-translate-y-0.5"
    >
      Ver más
      <StoreIcon />
    </a>
  </div>
</header>
<main id="wishList" class=""></main>
<!-- Modal para eliminar todos los items de la lista -->

<dialog
  id="deleteListModal"
  class="backdrop:bg-neutral-700/30 dark:backdrop:bg-neutral-950/60 rounded-xl overflow-hidden mx-auto"
>
  <div class="bg-secondary dark:bg-rose-200 p-4">
    <header
      class=" flex flex-col gap-3 w-full justify-center items-center"
    >
      <i class="text-primary rounded-full"
        ><svg
          class="bg-white rounded-full pb-1.5 size-14"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          style="fill: currentColor;transform: ;msFilter:;"
          ><path d="M11.001 10h2v5h-2zM11 16h2v2h-2z"></path><path
            d="M13.768 4.2C13.42 3.545 12.742 3.138 12 3.138s-1.42.407-1.768 1.063L2.894 18.064a1.986 1.986 0 0 0 .054 1.968A1.984 1.984 0 0 0 4.661 21h14.678c.708 0 1.349-.362 1.714-.968a1.989 1.989 0 0 0 .054-1.968L13.768 4.2zM4.661 19 12 5.137 19.344 19H4.661z"
          ></path></svg
        ></i
      > ¿Eliminar por completo la lista?
    </header>
    <p class="font-semibold ">
      ¿Estás seguro? <span class="text-primary">
        ¡Esta acción no se puede revertir!</span
      >
    </p>
  </div>
  <footer
    class="flex justify-end items-center bg-primary/20 dark:bg-primary/40 gap-2 px-4 py-2"
  >
    <button id="btnDeleteList" class="px-3 py-1 bg-primary rounded text-white cursor-pointer"
      >Eliminar</button
    >
    <button
      id="closeModalDeleteList"
      class="px-3 py-1 bg-secondary rounded cursor-pointer">Cerrar</button
    >
  </footer>
</dialog>

<script is:inline>
  // Verifica si localList ya está definida antes de declararla
  if (typeof localList === "undefined") {
    let localList = getWishList();
  }

  var MIN_CANT_ITEM = 1;
  var MAX_CANT_ITEM = 20;

  function getWishList() {
    const wishList = JSON.parse(localStorage.getItem("wishListBonitaGlam")) || [];
    if (wishList.length === 0) {
      localStorage.setItem("wishListBonitaGlam", JSON.stringify([]));
    }
    return wishList;
  }

  function setWishList() {
    localStorage.setItem("wishListBonitaGlam", JSON.stringify(localList));
  }

  function updateItemQuantity(itemTitle, delta) {
    const item = localList.find(({ title }) => title === itemTitle);
    if (item) {
      const newQuantity = item.quantity + delta;
      if (newQuantity >= MIN_CANT_ITEM && newQuantity <= MAX_CANT_ITEM) {
        item.quantity = newQuantity;
        setWishList();
        window.dispatchEvent(new CustomEvent("user:editQuantityProduct"));
      }
    }
  }

  function removeItem(itemTitle) {
    localList = localList.filter(({ title }) => title !== itemTitle);
    setWishList();
    window.dispatchEvent(new CustomEvent("user:editQuantityProduct"));
  }

  function renderWishList() {
    localList = getWishList();
    const wishListElement = document.querySelector("#wishList");
    if (!wishListElement) return;

    if (localList.length === 0) {
      wishListElement.innerHTML = `<span class='col-span-full text-center inline-block pt-2'>¡La lista está vacía! <a href="/categories" class="text-primary font-sembold"> ¡Agrega algún producto! </a></span>`;
      return;
    }

    wishListElement.innerHTML = localList
      .map(
        (item) => `
      <div class="wish-item">
        <img src="${item.image}" alt="${item.title}">
        <h5>${item.title}</h5>
        <p class="price">$${item.price} <span class='text-xs font-normal opacity-50'>c/u<span></p>
        <div class="quantity-control">
          <button onclick="updateItemQuantity('${item.title}', -1)" class='quantityBtn' title="Disminuir">
            <svg fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-full">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15 12H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>
          </button>
          <span>${item.quantity}</span>
          <button onclick="updateItemQuantity('${item.title}', 1)" class='quantityBtn' title="Aumentar">
            <svg fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-full">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>
          </button>
        </div>
        <button onclick="removeItem('${item.title}')" title="Eliminar">
          <svg class="size-5" viewBox="0 0 24 24" style="fill: currentColor;transform: ;msFilter:;">
            <path d="M5 20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8h2V6h-4V4a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v2H3v2h2zM9 4h6v2H9zM8 8h9v12H7V8z"></path>
            <path d="M9 10h2v8H9zm4 0h2v8h-2z"></path>
          </svg>
        </button>
      </div>
    `
      )
      .join("");
  }

  function deleteAllList() {
    const deleteListModal = document.querySelector("#deleteListModal");
    const closeModalDeleteTask = document.querySelector(
      "#closeModalDeleteList"
    );
    const btnDelete = document.querySelector("#btnDeleteList");

    deleteListModal.showModal();

    closeModalDeleteTask.addEventListener("click", () =>
      deleteListModal.close()
    );
    deleteListModal.addEventListener("click", (event) => {
      if (event.target === deleteListModal) deleteListModal.close();
    });

    // Remover cualquier listener previo antes de agregar uno nuevo
    const newBtnDelete = btnDelete.cloneNode(true);
    btnDelete.replaceWith(newBtnDelete);

    newBtnDelete.addEventListener("click", () => {
      localList = [];
      setWishList();
      deleteListModal.close();
      window.dispatchEvent(
        new CustomEvent("user:addedProduct", {
          detail: "Se vació la lista",
        })
      );
    });
  }

  document.addEventListener("astro:page-load", () => {
    const cleanList = document.querySelector("#cleanList");
    if (cleanList) {
      cleanList.addEventListener("click", deleteAllList);
      renderWishList();
    }
  });

  window.addEventListener("user:addedProduct", renderWishList);
  window.addEventListener("user:editQuantityProduct", renderWishList);
</script>
